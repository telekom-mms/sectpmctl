################################
# SECTPMCTL BOOT CONFIGURATION #
################################

# DEFAULT_KERNEL_CMDLINE
# The default kernel command line. It is set for all kernels automatically.
# Default: DEFAULT_KERNEL_CMDLINE="root=$(df / | tail -n 1 | awk '{print $1}') ro"
DEFAULT_KERNEL_CMDLINE="root=$(df / | tail -n 1 | awk '{print $1}') ro"

# LATEST_KERNEL_CMDLINE
# Option to overwrite the default kernel command line of the latest kernel.
# It does not affect every older installed kernel. Please note to supply
# DEFAULT_KERNEL_CMDLINE or an alternative basis command line. Example:
# LATEST_KERNEL_CMDLINE="${DEFAULT_KERNEL_CMDLINE}"

# KERNEL_CMDLINE_MAP
# Option to overwrite the default kernel command line of a specific kernel.
# It also overwrites LATEST_KERNEL_CMDLINE when the latest kernel is set in this
# map. Please note to supply DEFAULT_KERNEL_CMDLINE or an alternative basis
# command line. Specify one mapping for each kernel version's command line.
# Example:
# KERNEL_CMDLINE_MAP[5.13.0-30-generic]="${DEFAULT_KERNEL_CMDLINE} amd.iommu=pt"

# BOOT_ENTRY_PREFIX
# The textual name of a kernel boot entry is the concaternation of this fixed
# boot entry text prefix and the kernel version. See 'man lsb_release' for more
# information. Example of default setting:
# 'SECTPMCTL Ubuntu 21.10 5.13.0-30-generic'
# Default: BOOT_ENTRY_PREFIX="SECTPMCTL $(lsb_release -si) $(lsb_release -sr)"
BOOT_ENTRY_PREFIX="SECTPMCTL $(lsb_release -si) $(lsb_release -sr)"

# SKIP_UNSIGNED_KERNELS
# Add only kernels signed by Canonical or Debian. Enabled by default to prevent using
# of eventually not locked kernels. The mainline kernels for example doesn't enfore
# signed kernel modules which is generally bad. Disable this option only for
# specific reasons.
# Default: SKIP_UNSIGNED_KERNELS="true"
SKIP_UNSIGNED_KERNELS="true"

# MAX_KERNEL_ENTRIES
# Limit the number of kernels installed in the EFI partition. This number can be
# approximated by dividing the size of the EFI partition by the average size of a
# unified EFI blob of a kernel. See /boot/efi/EFI/Linux for the currently installed.
# The currently running kernel is kept for safety reasons, therefore MAX_KERNEL_ENTRIES
# could then be MAX_KERNEL_ENTRIES + 1
# EFI blobs. Default: MAX_KERNEL_ENTRIES="4"
MAX_KERNEL_ENTRIES="4"

