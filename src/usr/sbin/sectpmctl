#!/bin/bash

# SECTPMCTL
# AUTHORS: Heike Pesch <heike.pesch@t-systems.com>
#          Richard Robert Reitz <richard-robert.reitz@t-systems.com>

# version and name
SECKEYCTL_VERSION="1.2.0"
ME=$(basename "${0}")

# path to keys
TOOLS_PATH="/usr/lib/sectpmctl/scripts"

_print_error() {
  echo "${@}" 1>&2
}

_usage_short() {
  cat <<__END
$ME COMMAND [OPTIONS...]

sectpmctl provides a small EFI-Bootloader and the ability to open the 
LUKS encrypted Root Partition during boot with in TPM2 stored secret.

Commands
  boot
  key
  tpm
  help
  version
__END
}

_usage_long() {
  cat <<__END
$ME COMMAND [OPTIONS...]

sectpmctl provides a small EFI-Bootloader and the ability to open the 
LUKS encrypted Root Partition during boot with in TPM2 stored secret.

Commands
  boot

    command to interact with $ME bootloader
    For more information use:
    $ME boot help

  key

    command to interact with $ME key tool
    For more information use:
    $ME key help

  tpm

    command to interact with $ME TPM2 and LUKS-Device
    For more information use:
    $ME tpm help


  help

    Show this help.

  version

    Show version.
__END
}

_check_input_and_state() {
  if (( ${#} == 0 )); then
    _usage_short
    return 0
  fi

  cmd="${1}"
  
  case "${cmd}" in
    boot | key | tpm)
      shift
      "${TOOLS_PATH}/sectpmctl-${cmd}" "${@}"
      exit ${?}
      ;;
    help)
      _usage_long
      return 0
      ;;
    version)
      echo "${ME} ${SECKEYCTL_VERSION}"
      return 0
      ;;
    *)
      _print_error "${ME}: Invalid command '${cmd}'"
      return 1
      ;;
  esac
}

_check_input_and_state "$@"
ret=${?}

if [[ ${ret} == 1 ]]; then
  _print_error "${ME}" finished with error
  exit 1
fi

exit 0

